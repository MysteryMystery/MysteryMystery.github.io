@page "/CatanBoardBuilder"

@using Blazor.Models.Catan;
@using Blazor.Services.Catan;

@using System.Text.Json

@inject ICatanBoardBuilder CatanBuilder
@inject ILogger<CatanBoardBuilder> Logger


@if(Board is not null){
    <div class="overflow-x-auto">
        <div class="board">
            @foreach (var row in Board.TileRows)
            {
                <div>
                    @if (row.Count() < Board.MaxRowLength)
                    {
                        @for (int i = 0; i < (Board.MaxRowLength - row.Count()) / 2.0; i++)
                        {
                            <div class="spacer"></div>
                        }
                    }

                    @foreach (var tile in row)
                    {
                        if (tile.GetType() == typeof(ResourceTile))
                        {
                            <div class="@(((ResourceTile) tile).ResourceType.ToString().ToLower())">
                                @if(((ResourceTile) tile).ResourceType != ResourceType.DESERT){
                                    <span>@(((ResourceTile)tile).DiceValue)</span>
                                } else
                                {
                                    <span>&nbsp;</span>
                                }
                            </div>
                        }
                        else if ((tile.GetType() == typeof(SeaTile)))
                        {
                            <div class="water">
                                <span>&nbsp;</span>
                            </div>
                        } else if(tile.GetType() == typeof(TradeTile))
                        {
                            <div class="@(((TradeTile) tile).OfferResourceType.ToString().ToLower()) trade">
                                <span>@(((TradeTile) tile).OfferValue):1</span>
                            </div>
                        }
                    }
                </div>
            }
        </div>
    </div>
}


@code {

    private Board Board { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Board = CatanBuilder.Random().Result;

        Logger.LogInformation(JsonSerializer.Serialize(Board.TileRows));
    }
}
