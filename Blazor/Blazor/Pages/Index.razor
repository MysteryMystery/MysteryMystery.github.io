@page "/"

@using Blazor.Shared.Components
@using Blazor.Shared.ProjectShowcase

@inject ITextualDataService TextualDataService
@inject IConfiguration Configuration

<PageTitle>James Attfield</PageTitle>

<div class="min-h-screen flex flex-col hero-section">
    <NavBar TransparentBackground=true></NavBar>

    <div class="grow text-white container mx-auto flex items-center justify-center flex-col">
        @* Hero text and social icons *@
        <div class="">
            <div class="grid grid-cols-1 w-full md:grid-cols-2 gap-5 p-3">
                <div class="text-center md:text-left">
                    <h1 class="text-6xl text-hero">Hi, I'm James!</h1>
                </div>
                <div class="flex justify-around md:justify-end md:text-right">
                    <div class="p-1 md:p-3 md:border-b-4 md:border-accent hover:shadow">
                        <a href="@(Configuration["socials:github"])">
                            <img class="w-20" src="/img/logo/github-mark-white.svg" alt="github-logo" />
                        </a>
                    </div>
                    <div class="p-1 md:p-3 md:border-b-4 md:border-accent ">
                        <a href="@(Configuration["socials:linkedin"])">
                            <img class="w-20" src="/img/logo/LI-In-Bug.png" alt="linkedin-logo" />
                        </a>
                    </div>
                </div>
            </div>

            @* Intro text *@
            <div class="w-full p-3">
                <p class="text-2xl md:text-3xl">I am a <InlineLanguageText Language="csharp">.Net</InlineLanguageText> DevOps engineer specialising in on-premise infrastructure, transitioning to the cloud! I love all things code, taking pride in automation aiming for a "one click" solution to a problem in addition to having a background in web development using <InlineLanguageText Language="php">PHP</InlineLanguageText> Laravel, and have dabbled in various other languages such as <InlineLanguageText Language="java">Java</InlineLanguageText> &amp; <InlineLanguageText Language="ruby">Ruby</InlineLanguageText>.</p>
            </div>
        </div>
        
        @* Hero cards *@
        <div class="grid grid-cols-1 md:grid-cols-4 w-full gap-4 m-3 px-2">
            @foreach (HeroCard hc in heroCards)
            {
                <div class="md:h-56">
                    <Card>
                        <Header>
                            @hc.Title
                        </Header>
                        <Body>
                            @hc.Body
                        </Body>
                        <Footer>
                            @hc.Footnotes
                        </Footer>
                    </Card>
                </div>
            }
        </div>

        @* Nav *@
        <div class="w-full flex flex-row flex-wrap justify-center m-1 md:mt-64 gap-1 md:gap-10">
            <div>
                <HashLink Text="My Projects" ScrollTo="projects"></HashLink>
            </div>
            <div>
                <HashLink Text="My Education" ScrollTo="education"></HashLink>
            </div>
            <div>
                <HashLink Text="About Me" ScrollTo="aboutme"></HashLink>
            </div>
        </div>
    </div>
</div>

<div id="projects" class="flex flex-col items-center bg-light-grey p-1 md:py-4">
    <div class="p-1 p-4">
        <h1 class="text-4xl">My Projects</h1>
    </div>
    <div class="w-full md:w-3/5">
        <ProjectShowcase>
            @foreach (var item in projectShowcaseItems)
            {
                <ProjectShowcaseItem WebsiteLink="@item.WebsiteUrl">
                    <Thumbnail>
                        @if(item.ThumbnailUrl is not null){
                            <img src="@item.ThumbnailUrl" alt="@item.ThumbnailUrl" />
                        }
                    </Thumbnail>
                    <HeaderText>@item.Title</HeaderText>
                    <BodyText>@item.Body</BodyText>
                </ProjectShowcaseItem>
            }
        </ProjectShowcase>
    </div>
</div>

<div id="projects" class="flex flex-col items-center bg-light-grey p-1 md:py-4">
    <div class="p-1 p-4">
        <h1 class="text-4xl">Mini Projects</h1>
    </div>
    <div class="w-full md:w-3/5">
        <div class="grid grid-cols-3 md:grid-cols-4 gap-1 gap-4">
            @foreach (var item in miniProjectsShowcaseItems)
            {
                <ProjectShowcaseItem WebsiteLink="@item.WebsiteUrl" NavLinkText="View" CssClass="@item.CssClass">
                    <HeaderText>@item.Title</HeaderText>
                    <BodyText>@item.Body</BodyText>
                    <Tags>
                        @foreach (var tag in item.Tags ?? Array.Empty<string>().ToList())
                        {
                            <ProjectShowcaseTag>@tag</ProjectShowcaseTag>
                        }
                    </Tags>
                </ProjectShowcaseItem>
            }
        </div>
    </div>
</div>

<div id="education" class="flex flex-col items-center bg-light-grey p-1 md:py-4">
    <div class="p-1 p-4">
        <h1 class="text-4xl">My Education</h1>
    </div>
    <div class="w-full md:w-3/5">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-1 gap-4">
            @foreach (var item in educationShowcaseItems)
            {
                <ProjectShowcaseItem>
                    <HeaderText>@item.Title</HeaderText>
                    <BodyText>@item.Body</BodyText>
                    <Tags>
                        @foreach (var tag in item.Tags ?? Array.Empty<string>().ToList())
                            {
                            <ProjectShowcaseTag>@tag</ProjectShowcaseTag>
                        }
                    </Tags>
                </ProjectShowcaseItem>
            }
        </div>
    </div>
</div>

@code{
    [CascadingParameter]
    public MainLayout MainLayout { get; set; }

    IEnumerable<HeroCard> heroCards = new HeroCard[4].Select(h => new HeroCard
    {
        Title = "",
        Body = "",
        Footnotes = ""
    }).ToList(); 

    IEnumerable<Models.ProjectShowcaseItem> projectShowcaseItems = new Models.ProjectShowcaseItem[4].Select(h => new Models.ProjectShowcaseItem
    {
        Title = "",
        Body = "",
    }).ToList();

    IEnumerable<Models.ProjectShowcaseItem> educationShowcaseItems = new Models.ProjectShowcaseItem[4].Select(h => new Models.ProjectShowcaseItem
        {
            Title = "",
            Body = "",
        }).ToList();

    IEnumerable<Models.ProjectShowcaseItem> miniProjectsShowcaseItems = new List<Models.ProjectShowcaseItem>();

    protected override async Task OnInitializedAsync()
    {
        MainLayout.ShowNavbar = false;

        heroCards = await TextualDataService.GetHeroCardsAsync();
        projectShowcaseItems = await TextualDataService.GetProjectShowcaseItemsAsync();
        educationShowcaseItems = await TextualDataService.GetEducationShowcaseItemsAsync();
        miniProjectsShowcaseItems = await TextualDataService.GetMiniProjectsShowcaseItemsAsync();
    }
}